.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PGASetIntegerInitRange" "3" "2025-05-03" "" "PGAPack"
.SH NAME
PGASetIntegerInitRange \- Set a flag to tell the initialization routines to set each integer-valued gene to a value chosen randomly from the interval given by an upper and lower bound. 
.SH SYNOPSIS
.B void PGASetIntegerInitRange(\fI\%PGAContext\fP *ctx, const int *min, const int *max) 
.sp
.SH EXAMPLE
.sp
Set the initialization routines to select a value for gene \fBi\fP
uniformly randomly from the interval [0,i]\&.  Assumes all
strings are of the same length.
.sp
.EX
PGAContext *ctx;
int *low, *high, stringlen, i;

\&...
stringlen = PGAGetStringLength (ctx);
low  = malloc (stringlen * sizeof (int));
high = malloc (stringlen * sizeof (int));
for (i=0; i<stringlen; i++) {
    low  [i] = 0;
    high [i] = i;
}
PGASetIntegerInitRange (ctx, low, high);
.EE

 
.SH PARAMETERS
.IP \(bu 2
\fBctx\fP \-\- context variable 
.IP \(bu 2
\fBmin\fP \-\- array of lower bounds that define the interval the gene is initialized from 
.IP \(bu 2
\fBmax\fP \-\- array of upper bounds that define the interval the gene is initialized from 
.SH RETURNS
None
.SH LOCATION
\fI\%File integer.c\fP
.SH COPYRIGHT
1996-2025, David M. Levine, Philip L. Hallstrom, David M. Noelle, Brian P. Walenz, Dirk Eddelbuettel, Ralf Schlatterbeck
.\" Generated by docutils manpage writer.
.
