.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PGADebugPrint" "3" "2025-05-03" "" "PGAPack"
.SH NAME
PGADebugPrint \- Write debugging information. 
.SH SYNOPSIS
.B void PGADebugPrint(\fI\%PGAContext\fP *ctx, int level, char *funcname, char *msg, int datatype, void *data) 
.sp
.SH DESCRIPTION
.sp
Valid values for \fBlevel\fP are \fI\%PGA_DEBUG_ENTERED\fP,
\fI\%PGA_DEBUG_EXIT\fP, \fI\%PGA_DEBUG_MALLOC\fP,
\fI\%PGA_DEBUG_PRINTVAR\fP, \fI\%PGA_DEBUG_SEND\fP, and
\fI\%PGA_DEBUG_RECV\fP\&. See \fI\%Debugging Constants\fP for the
constants and chapter \fI\%Debugging Tools\fP in the user guide for details.
.sp
Valid values for the \fBdatatype\fP argument are \fI\%PGA_INT\fP,
\fI\%PGA_DOUBLE\fP, \fI\%PGA_CHAR\fP and \fI\%PGA_VOID\fP
(no data). The parameter \fBdata\fP should be NULL, for
\fI\%PGA_VOID\fP\&. See \fI\%Constants for Error Printing\fP for the
constants in the user guide for details.
.SH EXAMPLE
.sp
If the debugging level includes printing variables (level 82), print the
value of the integer variable num as a debugging tool in the routine
\fBAdd2Nums\fP\&.
.sp
.EX
PGAContext *ctx;
int num;

\&...
PGADebugPrint
   ( ctx, PGA_DEBUG_PRINTVAR
   , \(dqAdd2Nums\(dq, \(dqnum = \(dq, PGA_INT, (void *) &num
   );
.EE

 
.SH PARAMETERS
.IP \(bu 2
\fBctx\fP \-\- context variable 
.IP \(bu 2
\fBlevel\fP \-\- a symbolic constant that maps to the type of print requested (e.g., an entry or exit print). 
.IP \(bu 2
\fBfuncname\fP \-\- the name of the function that called this routine 
.IP \(bu 2
\fBmsg\fP \-\- message to print 
.IP \(bu 2
\fBdatatype\fP \-\- a symbolic constant that maps to the data type of the parameter data 
.IP \(bu 2
\fBdata\fP \-\- a pointer, whose contents will be interpreted based upon the datatype parameter 
.SH RETURNS
The debugging information is printed to stdout
.SH LOCATION
\fI\%File debug.c\fP
.SH COPYRIGHT
1996-2025, David M. Levine, Philip L. Hallstrom, David M. Noelle, Brian P. Walenz, Dirk Eddelbuettel, Ralf Schlatterbeck
.\" Generated by docutils manpage writer.
.
