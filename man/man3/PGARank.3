.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PGARank" "3" "2025-05-03" "" "PGAPack"
.SH NAME
PGARank \- Return the rank of a string in a population. 
.SH SYNOPSIS
.B int PGARank(\fI\%PGAContext\fP *ctx, int p, int *order, int n) 
.sp
.SH DESCRIPTION
.sp
This is a value between 1,...,N (the population size).  The most fit
string has rank 1, the least fit string has rank N.
.SH EXAMPLE
.sp
Determine the rank of string \fBp\fP\&.
.sp
.EX
PGAContext *ctx;
int i, popsize, rank;
int popsize = PGAGetPopsize (ctx)
int order [popsize];

\&...
PGAEvalSort (ctx, pop, order);
rank = PGARank (ctx, p, order, popsize)
.EE

 
.SH PARAMETERS
.IP \(bu 2
\fBctx\fP \-\- context variable 
.IP \(bu 2
\fBp\fP \-\- the index of the string whose rank is desired 
.IP \(bu 2
\fBorder\fP \-\- an array containing a unique rank for each string 
.IP \(bu 2
\fBn\fP \-\- the size of the array order 
.SH RETURNS
The rank of string p
.SH LOCATION
\fI\%File fitness.c\fP
.SH COPYRIGHT
1996-2025, David M. Levine, Philip L. Hallstrom, David M. Noelle, Brian P. Walenz, Dirk Eddelbuettel, Ralf Schlatterbeck
.\" Generated by docutils manpage writer.
.
