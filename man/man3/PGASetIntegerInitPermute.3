.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PGASetIntegerInitPermute" "3" "2025-05-03" "" "PGAPack"
.SH NAME
PGASetIntegerInitPermute \- Set a flag to tell the initialization routines to set each integer-valued gene to a random permutation of the values given by an upper and lower bound. 
.SH SYNOPSIS
.B void PGASetIntegerInitPermute(\fI\%PGAContext\fP *ctx, int min, int max) 
.sp
.SH DESCRIPTION
.sp
The length of the interval must be the same
as the string length.  This is the default strategy for initializing
integer\-valued strings. The default interval is [0,L\-1]
where L is the string length.  No string initialization is
done by this call.
.SH EXAMPLE
.sp
Set the initialization routines to set each gene to a random and
unique value from the interval [500,599].
.sp
.EX
PGAContext *ctx;

\&...
PGASetIntegerInitPermute (ctx, 500, 599)}
.EE

 
.SH PARAMETERS
.IP \(bu 2
\fBctx\fP \-\- context variable 
.IP \(bu 2
\fBmin\fP \-\- the lower bound of numbers used in the permutation 
.IP \(bu 2
\fBmax\fP \-\- the upper bound of numbers used in the permutation 
.SH RETURNS
None
.SH LOCATION
\fI\%File integer.c\fP
.SH COPYRIGHT
1996-2025, David M. Levine, Philip L. Hallstrom, David M. Noelle, Brian P. Walenz, Dirk Eddelbuettel, Ralf Schlatterbeck
.\" Generated by docutils manpage writer.
.
