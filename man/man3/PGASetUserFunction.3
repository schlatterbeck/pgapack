.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PGASetUserFunction" "3" "2025-04-19" "" "PGAPack"
.SH NAME
PGASetUserFunction \- Specify the name of a user-written function to provide a specific GA capability (e.g., crossover, mutation, etc.). 
.SH SYNOPSIS
.B void PGASetUserFunction(\fI\%PGAContext\fP *ctx, int constant, void *f) 
.sp
.SH DESCRIPTION
.sp
This function \fImust\fP be used when using a non\-native
datatype and must be called once for each of:
.IP \(bu 2
\fI\%PGA_USERFUNCTION_CREATESTRING\fP     \-\- String creation
.IP \(bu 2
\fI\%PGA_USERFUNCTION_MUTATION\fP         \-\- Mutation
.IP \(bu 2
\fI\%PGA_USERFUNCTION_CROSSOVER\fP        \-\- Crossover
.IP \(bu 2
\fI\%PGA_USERFUNCTION_PRINTSTRING\fP      \-\- String Output
.IP \(bu 2
\fI\%PGA_USERFUNCTION_COPYSTRING\fP       \-\- Duplication
.IP \(bu 2
\fI\%PGA_USERFUNCTION_DUPLICATE\fP        \-\- Duplicate Checking
.IP \(bu 2
\fI\%PGA_USERFUNCTION_GEN_DISTANCE\fP     \-\- Genetic Distance
.IP \(bu 2
\fI\%PGA_USERFUNCTION_INITSTRING\fP       \-\- Initialization
.IP \(bu 2
\fI\%PGA_USERFUNCTION_BUILDDATATYPE\fP    \-\- MPI Datatype creation
.IP \(bu 2
\fI\%PGA_USERFUNCTION_HASH\fP             \-\- Hashing of genes
.IP \(bu 2
\fI\%PGA_USERFUNCTION_CHROM_FREE\fP       \-\- Free chromosome
.sp
The following need to be defined for serializing strings for
transmission:
.IP \(bu 2
\fI\%PGA_USERFUNCTION_SERIALIZE\fP        \-\- Serialize userdefined gene
.IP \(bu 2
\fI\%PGA_USERFUNCTION_DESERIALIZE\fP      \-\-
Deserialize userdefined gene
.IP \(bu 2
\fI\%PGA_USERFUNCTION_SERIALIZE_FREE\fP   \-\- Free serialized version
.sp
The following functions are always optional:
.IP \(bu 2
\fI\%PGA_USERFUNCTION_STOPCOND\fP         \-\- Stopping conditions
.IP \(bu 2
\fI\%PGA_USERFUNCTION_ENDOFGEN\fP         \-\-
Auxiliary functions at the end of each generation
.IP \(bu 2
\fI\%PGA_USERFUNCTION_PRE_EVAL\fP         \-\-
Auxiliary functions before evaluation but after crossover and
mutation
.IP \(bu 2
\fI\%PGA_USERFUNCTION_HILLCLIMB\fP        \-\- Hillclimbing
.sp
Some of these functions \fImay\fP be called when using a native datatype
to replace the built\-in functions PGAPack has for that datatype (For
example, if the Integer data type is used for a traveling
salesperson problem, the user may want to provide their own custom
crossover operator).  See \fI\%Constants for User Functions\fP for the constants
and chapters \fI\%Custom Usage: Native Data Types\fP (for custom functions used with the
builtin data types) and \fI\%Custom Usage: New Data Types\fP (for defining new data
types) in the user guide and the examples in the examples directory
for more details.
.SH EXAMPLE
.sp
.EX
void MyStringInit (PGAContext *, void *);
PGAContext *ctx;

\&...
PGASetUserFunction (ctx, PGA_USERFUNCTION_INITSTRING, MyStringInit);
.EE

 
.SH PARAMETERS
.IP \(bu 2
\fBctx\fP \-\- context variable 
.IP \(bu 2
\fBconstant\fP \-\- symbolic constant of the user function to set 
.IP \(bu 2
\fBf\fP \-\- name of the function to use 
.SH RETURNS
None
.SH LOCATION
\fI\%File user.c\fP
.SH COPYRIGHT
1996-2025, David M. Levine, Philip L. Hallstrom, David M. Noelle, Brian P. Walenz, Dirk Eddelbuettel, Ralf Schlatterbeck
.\" Generated by docutils manpage writer.
.
