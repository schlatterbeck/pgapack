.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PGAChange" "3" "2025-04-19" "" "PGAPack"
.SH NAME
PGAChange \- Repeatedly apply mutation to a string (with an increasing mutation rate) until one or more mutations have occurred. 
.SH SYNOPSIS
.B void PGAChange(\fI\%PGAContext\fP *ctx, int p, int pop) 
.sp
.SH DESCRIPTION
.sp
This routine is usually used with \fI\%PGADuplicate()\fP to modify a
duplicate string.  It is not intended to replace
\fI\%PGAMutate()\fP\&.
.SH EXAMPLE
.sp
Check the current to\-be\-inserted string if it is a copy of any of
the strings in \fI\%PGA_NEWPOP\fP\&. Note that the check relies on
all individuals in \fI\%PGA_NEWPOP\fP to also be inserted into
the duplicate hash, see \fI\%PGAHashIndividual()\fP\&.
.sp
.EX
PGAContext *ctx;
int p;

\&...
while (PGADuplicate (ctx, p, PGA_NEWNEW, PGA_NEWPOP)) {
    PGAChange (ctx, p, PGA_NEWPOP);
}
.EE

 
.SH PARAMETERS
.IP \(bu 2
\fBctx\fP \-\- context variable 
.IP \(bu 2
\fBp\fP \-\- string index 
.IP \(bu 2
\fBpop\fP \-\- symbolic constant of the population containing string p 
.SH RETURNS
Mutates string p in population pop via side effect
.SH LOCATION
\fI\%File duplcate.c\fP
.SH COPYRIGHT
1996-2025, David M. Levine, Philip L. Hallstrom, David M. Noelle, Brian P. Walenz, Dirk Eddelbuettel, Ralf Schlatterbeck
.\" Generated by docutils manpage writer.
.
